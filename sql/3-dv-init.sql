

--init for DV demo 

drop table if exists new_orders;

create table if not exists new_orders
(id number generated by default on null as identity,
product_id number,
order_date timestamp,
customer_id number,
total_value number(6,2),
order_shipped boolean,
warranty interval year to month);


insert into new_orders (product_id, order_date, customer_id, total_value, order_shipped, warranty)
values
(12, systimestamp, 100001, 10.23, true, interval '2-0' year to month),
(234, systimestamp, 223223, 1200.00, false, interval '1-6' year to month),
(57, systimestamp, 238121, 110.1, True, interval '5-0' year to month),
(2, systimestamp, 78993, 20.50, null, interval '0-6' year to month);
drop table if exists new_customers purge;



create domain if not exists date_of_birth as date;

create domain if not exists address as varchar2(100);

create domain if not exists persons_name as (first_name as varchar2(100),
                               last_name as varchar2(100))
                               display initcap(first_name) || ' ' || (initcap(last_name));

create domain if not exists email AS varchar2(30)  
    constraint email_c check (regexp_like (email, '^(\S+)\@(\S+)\.(\S+)$'));

create domain if not exists us_postal_code as varchar2(10)
    constraint zip_code_c check (regexp_like(us_postal_code, '^\d{5}(?-\d{4})?$'));




create table if not exists new_customers (
    id             number generated by default on null as identity      annotations (data_classification 'restricted', ui_display_label 'Customer ID', classification 'Identifier'),
    first_name     varchar2(100)                                        annotations (data_classification 'confidential', ui_display_label 'First Name', PID, classification 'Naming'),
    last_name      varchar2(100)                                        annotations (data_classification 'confidential', ui_display_label 'Last Name', PID, classification 'Naming'),
    dob            date_of_birth                                        annotations (data_classification 'confidential', ui_display_label 'Date of Birth', PID, classification 'Birth Date'),
    email          email                                                annotations (data_classification 'confidential', ui_display_label 'Email', PID, classification 'Email'),
    address        address                                              annotations (data_classification 'confidential', ui_display_label 'Address', PID, classification 'Location'),
    zip            us_postal_code                                       annotations (data_classification 'confidential', ui_display_label 'Zip Code', PID, classification 'Location'),
    phone_number   phone_number_d                                       annotations (data_classification 'confidential', ui_display_label 'Phone Number', PID, classification 'Phone'),
    credit_card    credit_card_number_d                                 annotations (data_classification 'confidential', ui_display_label 'Credit Card Number', PID, classification 'Credit Card'),
    joined_date    timestamp default systimestamp                       annotations (data_classification 'restricted', ui_display_label 'Joining Date', classification 'Application Date'),
    gold_customer  boolean default false                                annotations (data_classification 'public', ui_display_label 'Gold Member', classification 'Application Info')
    domain persons_name(first_name, last_name)) ;

insert into new_customers (id, first_name, last_name, email, address, zip)
values
(100001, 'Dom', 'Giles', 'dg7889@gmail.com', '10 smith street', '34454-1667'),
(223223, 'John', 'Smith', 'jsmith@hotmail.com', 'the grove', '28902'),
(238121, 'janet', 'white', 'jw123@gmail.com', 'apartment 256, 120 east street', '18092-7980'),
(78993, 'SUE', 'GRAY', 'sue_gray@gmail.com', '2345 main street', '34454');

insert into new_customers (id, first_name, last_name, email, address)
values
(43242, 'Katie', 'Giles', 'kgiles@gmail.com', '10 john hope road'),
(75567, 'Elizabeth', 'Green', 'egreen777@hotmail.com', '2 main street'),
(215456, 'Susan', 'Giles', 'susan.giles@gmail.com', '122 arthur road'),
(96743, 'Mark', 'Blue', 'mblue55@hotmail.com', 'orchard house, home road'),
(47943, 'Robert', 'Yellow', 'robyel888@gmail.com', 'appartment 12, 120 west street'),
(132, 'Alan', 'Red', 'ared@hotmail.com', '67 east street'),
(89324, 'Ashish', 'Gray', 'ar2637@gmail.com', '23 alex Road'),
(14576, 'Max', 'White', 'max.white@hotmail.com', '24 alex Road'),
(93034, 'Nick', 'Red', 'nred@gmail.com', '34 north avenue');


update new_customers c
set c.gold_customer = true
from new_orders o
where o.customer_id = c.id
and o.total_value > 1000;



alter table new_customers add (constraint new_customers_pk primary key (id));

alter table new_orders add (constraint new_orders_pk primary key (id));

alter table new_orders add (constraint new_orders_fk FOREIGN KEY (customer_id) REFERENCES new_customers (id));


CREATE or REPLACE JSON RELATIONAL DUALITY VIEW customers_dv AS
    new_customers @insert @update @delete
    {_id      : id
     FirstName       : first_name
     LastName        : last_name
     DateOfBirth     : dob
     Email           : email
     Address         : address
     Zip             : zip
     orders : new_orders @insert @update @delete
       [ {OrderID             : id
          ProductID           : product_id
          OrderDate           : order_date
          TotalValue          : total_value
          OrderShipped        : order_shipped
          } ]
    };

commit;

exit